// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/create-user": {
            "post": {
                "description": "Digunakan untuk admin yang ingin menambahkan user atau admin baru",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Soal Nomor 1"
                ],
                "summary": "User Create",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Add User",
                        "name": "User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.UserRegisterSuccess"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Url API untuk login setiap user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Soal nomor 2"
                ],
                "summary": "User Login",
                "parameters": [
                    {
                        "description": "User Data",
                        "name": "User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.UserLoginSuccess"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Digunakan untuk user yang akan melakukan registrasi",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Soal Nomor 1"
                ],
                "summary": "Consumer Register",
                "parameters": [
                    {
                        "description": "Add User",
                        "name": "User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserRegister"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.UserRegisterSuccess"
                        }
                    }
                }
            }
        },
        "/stuff": {
            "get": {
                "description": "Mengambil semua data barang",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Soal nomor 3"
                ],
                "summary": "Stuffes Get",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Stuff"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "membuat data barang",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Soal nomor 3"
                ],
                "summary": "Stuff Create",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Stuff Data",
                        "name": "Stuff",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.StuffSerializer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Stuff"
                        }
                    }
                }
            }
        },
        "/stuff/cosumer": {
            "get": {
                "description": "APi barang untuk consumer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Soal nomor 4"
                ],
                "summary": "Stuff for consumer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "used for page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "used for page size",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Stuff"
                            }
                        }
                    }
                }
            }
        },
        "/stuff/delete/multiple": {
            "post": {
                "description": "API URL untuk menghapus beberapa barang",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Soal nomor 3"
                ],
                "summary": "Stuff Multiple Delete",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Array of stuff ID",
                        "name": "ID",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.StuffID"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": ""
                    }
                }
            }
        },
        "/stuff/delete/{id}": {
            "post": {
                "description": "API URL untuk menghapus barang",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Soal nomor 3"
                ],
                "summary": "Stuff Delete",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": ""
                    }
                }
            }
        },
        "/stuff/update/{id}": {
            "post": {
                "description": "API URL untuk update barang",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Soal nomor 3"
                ],
                "summary": "Stuff Update",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Stuff Data",
                        "name": "Stuff",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.StuffSerializer"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/models.Stuff"
                        }
                    }
                }
            }
        },
        "/stuff/{id}": {
            "get": {
                "description": "API URL untuk mengambil data barang berdasarkan id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Soal nomor 3"
                ],
                "summary": "Stuff Get By ID",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id cctv",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Stuff"
                        }
                    }
                }
            }
        },
        "/transaction": {
            "post": {
                "description": "membuat data transaksi",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Soal no 5"
                ],
                "summary": "Transaction Create",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Transaction Data",
                        "name": "Stuff",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TransactionSerializer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Transaction"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Stuff": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "stuff_name": {
                    "type": "string"
                },
                "stuff_price": {
                    "type": "integer"
                },
                "stuff_stock": {
                    "type": "integer"
                }
            }
        },
        "models.StuffID": {
            "type": "object",
            "properties": {
                "stuff_id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.StuffSerializer": {
            "type": "object",
            "properties": {
                "stuff_name": {
                    "type": "string"
                },
                "stuff_price": {
                    "type": "integer"
                },
                "stuff_stock": {
                    "type": "integer"
                }
            }
        },
        "models.Transaction": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "detail": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TransactionDetail"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "is_paid": {
                    "type": "boolean"
                },
                "transaction_date": {
                    "type": "string"
                },
                "u": {
                    "type": "object",
                    "$ref": "#/definitions/models.User"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.TransactionDetail": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "s": {
                    "type": "object",
                    "$ref": "#/definitions/models.Stuff"
                },
                "stuff_id": {
                    "type": "integer"
                },
                "transaction_id": {
                    "type": "string"
                }
            }
        },
        "models.TransactionDetailSerializer": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "stuff_id": {
                    "description": "TransactionID string ` + "`" + `json:\"transaction_id\" form:\"transaction_id\"` + "`" + `",
                    "type": "integer"
                }
            }
        },
        "models.TransactionSerializer": {
            "type": "object",
            "properties": {
                "detail": {
                    "description": "Amount          int64                         ` + "`" + `json:\"amount\" form:\"amount\"` + "`" + `\nTransactionDate time.Time                     ` + "`" + `time_format:\"2006-01-02\" json:\"transaction_date\" form:\"transaction_date\"` + "`" + `",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TransactionDetailSerializer"
                    }
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "is_admin": {
                    "type": "boolean"
                },
                "user_fullname": {
                    "type": "string"
                },
                "user_mobile": {
                    "type": "string"
                },
                "user_password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.UserLogin": {
            "type": "object",
            "properties": {
                "user_password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.UserLoginSuccess": {
            "type": "object",
            "properties": {
                "user_fullname": {
                    "type": "string"
                },
                "user_mobile": {
                    "type": "string"
                },
                "user_token": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.UserRegister": {
            "type": "object",
            "properties": {
                "user_fullname": {
                    "type": "string"
                },
                "user_mobile": {
                    "type": "string"
                },
                "user_password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.UserRegisterSuccess": {
            "type": "object",
            "properties": {
                "user_fullname": {
                    "type": "string"
                },
                "user_mobile": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
